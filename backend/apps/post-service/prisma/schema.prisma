generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/@prisma/client/post-mongodb"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb://root:123456@localhost:27017/post_db?authSource=admin"
}

enum ReactType {
  Love
  Like
  Haha
  Wow
  Sad
  Angry
  Care
}

enum AttachmentType {
  Image
  Video
  Document
}

enum PostMode {
  Privacy
  Public
  OnlyMe
  Friends
  FriendsOfFriends
}

model UserDocument {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  userId       String         @unique
  Posts        PostDocument[]
  version      Int            @default(0)
  firstName    String
  lastName     String
  avatarFileId String?

  @@map("user")
}

type React {
  type   ReactType
  userId String
}

type Attachment {
  id          String
  createdAt   DateTime       @default(now())
  extension   String
  description String
  size        Int
  type        AttachmentType
}

type Reply {
  id          String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  content     String
  userId      String
  attachments Attachment[]
  reacts      React[]
}

type Comment {
  id          String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  content     String
  userId      String
  attachments Attachment[]
  replies     Reply[]
  reacts      React[]
}

model PostDocument {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  postId         String         @unique
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  version        Int            @default(0)
  content        String
  originalPost   PostDocument?  @relation(name: "SharePost", fields: [originalPostId], references: [postId], onUpdate: NoAction, onDelete: NoAction)
  originalPostId String?
  sharePost      PostDocument[] @relation(name: "SharePost")
  mode           PostMode
  userId         String
  user           UserDocument   @relation(fields: [userId], references: [userId], onUpdate: NoAction, onDelete: NoAction)
  attachments    Attachment[]
  comments       Comment[]
  reacts         React[]

  @@map("post")
}
