include /etc/nginx/api_backends.conf;
include /etc/nginx/api_keys.conf;

server {
    access_log /var/log/nginx/api_access.log main; # Each API may also log to a 
                                                   # separate file

    listen 80;
    # server_name api.example.com;

    # API definitions, one per file
    include /etc/nginx/api_conf.d/*.conf;

    # Error responses
    error_page 404 = @400;         # Treat invalid paths as bad requests
    proxy_intercept_errors on;     # Do not send backend errors to client
    include /etc/nginx/api_json_errors.conf;  # API client-friendly JSON errors
    default_type application/json; # If no content-type, assume JSON

    # API key validation
    location = /_validate_apikey {
        internal;
        proxy_pass http://auth_service/decode;
        proxy_pass_request_body off;
        proxy_set_header    Content-Length "";
        proxy_set_header X-iat $auth_response_iat; # Pass the username as a header
        proxy_set_header X-UserId $auth_response_userid; # Pass the username as a header

        # Define error handling for HTTP 401 responses from auth_service/decode
        error_page 401 =401 /401_error;
    }
    
    location = /401_error {
        internal;
        return 401 "Authentication failed";
    }
}